package FixMyStreet::Cobrand::Ireland;
use base 'FixMyStreet::Cobrand::Default';

use strict;
use warnings;

use Carp;
use Math::BaseCalc;

sub country { 'IE' }
sub area_types { [ 'ICO' ] }
sub area_types_children { [ 'ICC' ] }

sub shorturl {
    my ( $self, $id ) = @_;
    # my $base10 = new Math::BaseCalc(digits=>[0..9]);
    my $base62 = new Math::BaseCalc(digits=>['A'..'Z',0..9,'a'..'z']);
    my $shorten = $base62->to_base($id);
    return $shorten;
}

sub language_override { 'en-gb' }

sub short_name {
  my $self = shift;
  my ($area, $info) = @_;
  my $name = $area->{name};
  $name =~ s/ County Council$//;
  $name =~ s/ Council$//;
  $name =~ s/ & / and /;
  $name =~ s{/}{_}g;
  $name = URI::Escape::uri_escape_utf8($name);
  $name =~ s/%20/+/g;
  return $name;
}

sub enter_postcode_text {
    my ( $self ) = @_;
    return _('Enter a nearby street name, area or townland');
}

# Is also adding language parameter
sub disambiguate_location {
    return {
        lang    => 'en_gb',
        country => 'IE',
        bing_country => 'Ireland',
        google_country => 'ie',
    };
}

sub _fallback_council_sender {
    my ( $self, $area_id, $area_info, $category ) = @_;
    # Dublin City, Fingal, Galway County, Kildare, South Dublin
    return { method => 'FixYourStreet' }
        if $area_id == 8 || $area_id == 10 || $area_id == 12 || $area_id == 14 || $area_id == 29;
    # Everywhere else
    return { method => 'Email' };
}

=item shorten_recency_if_new_greater_than_fixed

By default we want to shorten the recency so that the numbers are more
attractive.

=cut

sub shorten_recency_if_new_greater_than_fixed {
    return 0;
}



sub find_closest {
    my ( $self, $latitude, $longitude, $problem ) = @_;
    my $str = '';

    if ( my $j = FixMyStreet::Geocode::Bing::reverse( $latitude, $longitude, disambiguate_location()->{bing_culture} ) ) {
        # cache the bing results for use in alerts
        if ( $problem ) {
            $problem->geocode( $j );
            $problem->update;
        }
        if ($j->{resourceSets}[0]{resources}[0]{name}) {
            $str .= sprintf(_("Nearest road: %s (automatically generated by Bing Maps)"),
                $j->{resourceSets}[0]{resources}[0]{name}) . "\n\n";
        }
    }

    return $str;
}

sub admin_base_url {
    return 'http://fixmystreet.ie/admin/';
}

sub geocoded_string_check {
    my ( $self, $s ) = @_;
    return 1 if $s =~ /, Ireland/;
    return 0;
}


1;
